// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrenRezervasyon.Infrastructure.Data;

#nullable disable

namespace TrenRezervasyon.Infrastructure.Migrations
{
    [DbContext(typeof(TrenRezervasyonAPIDbContext))]
    [Migration("20221028215702_mig_1")]
    partial class mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrenRezervasyon.ApplicationCore.Entities.Concrete.Tren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trenler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Başkent Ekspres"
                        });
                });

            modelBuilder.Entity("TrenRezervasyon.ApplicationCore.Entities.Concrete.Vagon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DoluKoltukAdet")
                        .HasColumnType("integer");

                    b.Property<int>("Kapasite")
                        .HasColumnType("integer");

                    b.Property<int>("TrenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrenId");

                    b.ToTable("Vagonlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Vagon 1",
                            DoluKoltukAdet = 68,
                            Kapasite = 100,
                            TrenId = 1
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Vagon 2",
                            DoluKoltukAdet = 50,
                            Kapasite = 90,
                            TrenId = 1
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Vagon 3",
                            DoluKoltukAdet = 80,
                            Kapasite = 80,
                            TrenId = 1
                        });
                });

            modelBuilder.Entity("TrenRezervasyon.ApplicationCore.Entities.Concrete.Vagon", b =>
                {
                    b.HasOne("TrenRezervasyon.ApplicationCore.Entities.Concrete.Tren", "Tren")
                        .WithMany("Vagonlar")
                        .HasForeignKey("TrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("TrenRezervasyon.ApplicationCore.Entities.Concrete.Tren", b =>
                {
                    b.Navigation("Vagonlar");
                });
#pragma warning restore 612, 618
        }
    }
}
